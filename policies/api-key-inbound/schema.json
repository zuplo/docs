{
  "$schema": "https://json-schema.org/draft-07/schema",
  "$id": "http://zuplo.com/schemas/policies/api-key-inbound.json",
  "type": "object",
  "title": "API Key Authentication (Beta)",
  "isPreview": true,
  "description": "Authenticates requests using Zuplo API Key Management",
  "required": ["handler"],
  "properties": {
    "handler": {
      "type": "object",
      "default": {},
      "required": ["export", "module", "options"],
      "properties": {
        "export": {
          "const": "ApiKeyInboundPolicy",
          "description": "The name of the exported type"
        },
        "module": {
          "const": "$import(@zuplo/runtime)",
          "description": "The module containing the policy"
        },
        "options": {
          "type": "object",
          "description": "The options for this policy",
          "required": [],
          "properties": {
            "authHeader": {
              "type": "string",
              "description": "The name of the header with the key. Defaults to `Authorization`"
            },
            "authScheme": {
              "type": "string",
              "description": "The scheme used on the header. Defaults to `Bearer`"
            },
            "bucketName": {
              "type": "string",
              "description": "The name of the API Key service bucket"
            },
            "allowUnauthenticatedRequests": {
              "type": "string",
              "description": "If requests should proceed even if the policy does not successfully authenticate the request. Defaults to false and rejects any request without a valid API key (returning a `401 - Unauthorized` response). Set to `true` to support multiple authentication methods or support both authenticated and anonymous requests."
            },
            "cacheTtlSeconds": {
              "type": "string",
              "description": "The time to cache authentication results for a particular key. Higher values will decrease latency. Cached results will be valid until the cache expires even in the event the key is deleted, etc.."
            }
          }
        }
      },
      "examples": [
        {
          "_name": "basic",
          "export": "ApiKeyInboundPolicy",
          "module": "$import(@zuplo/runtime)",
          "options": {
            "bucketName": "my-bucket",
            "allowUnauthenticatedRequests": false
          }
        }
      ]
    }
  }
}
